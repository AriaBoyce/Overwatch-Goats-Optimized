import "base.ostw";
playervar define sleep_dart_use;
//healing per shot 70->75 
//OK damage per shot 75
//ammo 15->14
//sleep dart duration 5->6 seconds
//sleep dart cooldown 14->12 seconds
//nade duration 3->4 seconds
//nade cooldown 12->10 seconds
//nade healing damage 90->100
//quick melee damage 40->30
//remove nano heal

//to get proper damage/healing done with primary, raise of 7.14%
//to get proper nade damage/healing, raise of 11.11%
//issue of quick melee then doing 42 or 44 damage
//fuck it we ball and leave in quick melee damage. git gud
//will go with raise of 7.14% in damage and healing

void ana_setup()
{
    role = 0;
    current_hero = Hero.Ana;
    base_armor = 0;
    base_health = 200;
    base_shield = 0;
    self_move_speed = 100;
    sleep_dart_use = null;
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Health,150,true,true);
    //CreateHudText(AllPlayers(),"{0}:{1}:{2}".Format([heal_test,heal_test_2,IsUsingAbility2()]),null,null,Location.Left,0,Color.White,Color.White,Color.White,HudTextRev.String,Spectators.VisibleAlways);
    //get health to 200 by setting health to 80% in custom game settings
}

rule: "Ana Damage"
Event.OnDamageDealt
Player.Ana
{
    if(EventAbility() == Button.Ability2)
    {
        Damage(Victim(),Attacker(),10);
    }
    else if(EventAbility() == Button.Ability1)
    {
        sleep_dart_use = Victim();
    }
}

rule: "Ana Sleep Dart"
Player.Ana
if(sleep_dart_use != null)
{
    Wait(2.9);
    if(HasStatus(sleep_dart_use,Status.Asleep))
    {
        ClearStatus(sleep_dart_use,Status.Asleep);
        MinWait();

        if(sleep_dart_use.role == 1)
        {
            SetStatus(sleep_dart_use,null,Status.Asleep,3.1);
        }
        else
        {
            SetStatus(sleep_dart_use,null,Status.Asleep,6.2);
        }
    }
    sleep_dart_use = null;
}

rule: "Ana Nano Heal"
Event.OnHealingDealt
Player.Ana
if(EventAbility() != Button.PrimaryFire)
{
    if(EventAbility() == Button.Ability2)
    {
        Heal(Healee(),Healer(),10);
    }
    else if(EventAbility() == Button.Ultimate)
    {
        Damage(Healee(),null,EventHealing()*2);
    }
}