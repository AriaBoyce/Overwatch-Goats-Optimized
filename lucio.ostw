import "base.ostw";

playervar define team_in_range;
playervar define team_out_range;
playervar define team_minus_lucio;
playervar define changed_to_heal;
//beat health 750->500
//self heal penalty 60->30%
//base move 25->30%
//amp move 60->70%
//no self heal penalty during heal amp
//boop damage 45->25
//boop knockback down 12%
//damage 18->20
//15.36
//9.6
//11.81
void lucio_setup()
{
    team_in_range = null;
    team_out_range = null;
    self_move_speed = 100;
    base_health = 200;
    current_hero = Hero.Lucio;
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Health,175,true,true);
}

rule: "Lucio Action"
Event.OngoingPlayer
Player.Lucio
{
    team_minus_lucio = RemoveFromArray(AllPlayers(TeamOf()),EventPlayer());
    team_in_range = RemoveFromArray(PlayersWithinRadius(PositionOf(),12,TeamOf(),RadiusLOS.SurfacesAndEnemyBarriers),EventPlayer());
    team_out_range = RemoveFromArray(team_minus_lucio,team_in_range);
    //speed boost
    if(IsInAlternateForm())
    {
        changed_to_heal = false;
        if(IsUsingAbility2())//speed amp
        {
            self_move_speed += 6.3;
            SetMoveSpeed(EventPlayer(),self_move_speed);
            self_move_speed -= 6.3;
            for(define i = 0; i < 5; i++)
            {
                if(team_in_range[i] == null)
                {
                    break;
                }
                team_in_range[i].self_move_speed += 6.3;
                SetMoveSpeed(team_in_range[i],team_in_range[i].self_move_speed);
                team_in_range[i].self_move_speed -= 6.3;
            }
            for(define i = 0; i < 5; i++)
            {
                if(team_out_range[i] == null)
                {
                    break;
                }
                SetMoveSpeed(team_out_range[i],team_out_range[i].self_move_speed);
            }
        }
        else//default speed
        {
            self_move_speed += 4;
            SetMoveSpeed(EventPlayer(),self_move_speed);
            self_move_speed -= 4;
            for(define i = 0; i < 5; i++)
            {
                if(team_in_range[i] == null)
                {
                    break;
                }
                team_in_range[i].self_move_speed += 4;
                SetMoveSpeed(team_in_range[i],team_in_range[i].self_move_speed);
                team_in_range[i].self_move_speed -= 4;
            }

            for(define i = 0; i < 5; i++)
            {
                if(team_out_range[i] == null)
                {
                    break;
                }
                SetMoveSpeed(team_out_range[i],team_out_range[i].self_move_speed);
            }
        }


    }
    else if (changed_to_heal == false)//heal
    {
        changed_to_heal = true;
        SetMoveSpeed(EventPlayer(),self_move_speed);
        for(define i = 0; i < 5; i++)
        {
            if(team_minus_lucio[i] == null)
            {
                break;
            }
            SetMoveSpeed(team_minus_lucio[i],team_minus_lucio[i].self_move_speed);
        }
    }

    Wait(1/4);
    LoopIf(HeroOf(EventPlayer()) == Hero.Lucio);
}

rule: "Lucio Damage"
Event.OnDamageDealt
Player.Lucio
{
    //12.1 base
    //add 7.9
    if(EventAbility() == Button.PrimaryFire)
    {
        if(EventWasCriticalHit())
        {
            Damage(Victim(),Attacker(),7.9/0.275);
        }
        else
        {
            Damage(Victim(),Attacker(),7.9/0.55);
        }
        
    }
    else if(EventAbility() == Button.Melee)
    {
        Damage(Victim(),Attacker(),13/0.55);
    }
}

rule: "Lucio Heal"
Event.OnHealingTaken
Player.Lucio
if(Healee() != Healer())
{
    Heal(Healee(),null,EventHealing()*0.25);
}