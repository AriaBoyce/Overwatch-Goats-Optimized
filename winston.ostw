import "base.ostw";

playervar define winston_ult_health;

//shield duration 8->6s
//shield health 650->600
//cooldown 12->13

//100 armor
//400 health

//no secondary fire

//ult damage 50->40
//primary fire damage 70->60

void winston_setup()
{
    base_health = 400;
    base_armor = 100;
    SetMaxHealth(EventPlayer(),(600/650)*100);
    SetDamageDealt(EventPlayer(),(60/70)*100);
    SetMaxAmmo(EventPlayer(),0,100);
    current_hero = Hero.Winston;
    role = 1;
    SetKnockbackReceived(EventPlayer(),166);
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Armor,15.38,true,true);
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Health,546.16,true,true);
}

rule: "Winston Action"
Event.OngoingPlayer
Player.Winston
if(IsUsingUltimate())
{
    SetDamageDealt(EventPlayer(),80);
    RemoveAllHealthPoolsFromPlayer();
    winston_ult_health = AddHealthPoolToPlayer(EventPlayer(),HealthType.Health,252,true,true);
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Armor,100,true,true);
    Wait(10-tick_time*2);
    define temp_health = HealthOfType(EventPlayer(),HealthType.Health);
    define temp_armor = HealthOfType(EventPlayer(),HealthType.Armor);
    MinWait();
    RemoveAllHealthPoolsFromPlayer();
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Health,399,true,true);
    AddHealthPoolToPlayer(EventPlayer(),HealthType.Armor,100,true,true);
    MinWait();
    if(temp_armor < 100)
    {
        Damage(EventPlayer(),null,100-(temp_armor)+10);
    }
    if(temp_health < 400)
    {
        Damage(EventPlayer(),null,400-(temp_health));
    }

    //RemoveHealthPoolFromPlayer(winston_ult_health);
    SetDamageDealt(EventPlayer(),(60/70)*100);
}